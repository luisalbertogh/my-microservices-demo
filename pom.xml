<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <!-- POM coordinates -->
  <groupId>my-microservices-demo</groupId>
  <artifactId>my-microservices-demo</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  
  <!-- Parent -->
  <parent>
	  <groupId>org.springframework.cloud</groupId>
	  <artifactId>spring-cloud-starter-parent</artifactId>
	  <version>Dalston.SR2</version>  <!-- Name of release train -->
  </parent>
  
  <!-- Properties -->
  <properties>
  	<unit-tests.skip>false</unit-tests.skip>
	<integration-tests.skip>true</integration-tests.skip>
  </properties>
  
  <!-- Dependencies -->
  <dependencies>
      <dependency>
          <!-- Setup Spring Boot -->
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter</artifactId>
      </dependency>

      <dependency>
          <!-- Setup Spring MVC & REST, use Embedded Tomcat -->
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-web</artifactId>
      </dependency>

      <dependency>
          <!-- Spring Cloud starter -->
          <groupId>org.springframework.cloud</groupId>
          <artifactId>spring-cloud-starter</artifactId>
      </dependency>

      <dependency>
          <!-- Eureka for service registration -->
          <groupId>org.springframework.cloud</groupId>
          <artifactId>spring-cloud-starter-eureka-server</artifactId>
      </dependency>
      
	  <dependency>
		  <!-- Setup Spring Data common components -->
		  <groupId>org.springframework.data</groupId>
		  <artifactId>spring-data-commons</artifactId>
	  </dependency>
	  
	  <dependency>
		  <!-- Setup Spring Data JPA Repository support -->
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-starter-data-jpa</artifactId>
	  </dependency>
		
	  <dependency>
		  <!-- In-memory database for testing/demos -->
		  <groupId>org.hsqldb</groupId>
		  <artifactId>hsqldb</artifactId>
	  </dependency>
	  
	  <dependency>
	  		<!-- Thymeleaf -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
	  </dependency>
	  
	  <dependency>
			<!-- Testing starter -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
	   </dependency>	  
  </dependencies>
  
  <!-- Build -->
  <build>
    <plugins>
      <!-- Maven compiler plugin -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.3</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <!-- Spring Boot Maven plugin, automatically create executable uber Jar files -->
      <plugin>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-maven-plugin</artifactId>
		<configuration>
          	<mainClass>net.luisalbertogh.microservices.Main</mainClass>
		</configuration>
		<executions>
			<execution>
				<goals>
					<goal>repackage</goal>
				</goals>
			</execution>
		</executions>
	  </plugin>
	  <!-- Test plugins -->
      <plugin>
	      <artifactId>maven-surefire-plugin</artifactId>
	      <configuration>
	        <skipTests>${unit-tests.skip}</skipTests>
	        <excludes>
	          <exclude>**/*ITest.java</exclude>
	        </excludes>
	      </configuration>
	  </plugin>
      <plugin>
	      <artifactId>maven-failsafe-plugin</artifactId>
	      <executions>
	        <execution>
	          <id>integration-test</id>
	          <goals>
	            <goal>integration-test</goal>
	          </goals>
	          <configuration>
	            <skipTests>${integration-tests.skip}</skipTests>
	            <includes>
	              <include>**/*ITest.class</include>
	            </includes>
	          </configuration>
	        </execution>
	      </executions>
	  </plugin>
    </plugins>
  </build>
  
  <!-- Profiles -->
  <profiles>
     <profile>
       <!-- Integration test profile -->
       <id>integration</id>
       <properties>
         <unit-tests.skip>true</unit-tests.skip>
         <integration-tests.skip>false</integration-tests.skip>
       </properties>
     </profile>
   </profiles>
	
</project>